Blockly.Msg.TIPOS_OPCIONES = 'Options';
Blockly.Msg.TIPOS_IDIOMA = 'Language';
Blockly.Msg.TIPOS_IDIOMA_ES = 'Spanish';
Blockly.Msg.TIPOS_IDIOMA_EN = 'English';
Blockly.Msg.TIPOS_GUARDAR = 'Save';
Blockly.Msg.TIPOS_VARIABLES = 'Variables';
Blockly.Msg.TIPOS_VARIABLES_LOCALES = 'Local Variables';
Blockly.Msg.TIPOS_VARIABLES_GLOBALES = 'Global variables';
Blockly.Msg.TIPOS_FUNCIONES = 'Functions';
Blockly.Msg.TIPOS_RESULTADO = 'Result';
Blockly.Msg.TIPOS_SOLO_LOCALES = 'Locals only';
Blockly.Msg.TIPOS_SOLO_GLOBALES = 'Globals only';
Blockly.Msg.TIPOS_AMBAS = 'Both';
Blockly.Msg.TIPOS_SCOPE = 'scope';
Blockly.Msg.TIPOS_VARIABLE = 'variable';
Blockly.Msg.TIPOS_FUNCION = 'function';
Blockly.Msg.TIPOS_TIPO_INFERIDO = 'infered type';
Blockly.Msg.TIPOS_MAINPROC = 'main procedure';
Blockly.Msg.TIPOS_CICLO = 'loop';

Blockly.Msg.TIPOS_VARIABLE_FRESCA = 'fresh variable';
Blockly.Msg.TIPOS_VARIABLE_FRESCA1 = 'a fresh variable';
Blockly.Msg.TIPOS_VARIABLE_FRESCAS = 'fresh variables';
Blockly.Msg.TIPOS_ENTERO = 'integer';
Blockly.Msg.TIPOS_NUMERO1 = 'a number';
Blockly.Msg.TIPOS_NUMEROS = 'numbers';
Blockly.Msg.TIPOS_ENTERO1 = 'an integer number';
Blockly.Msg.TIPOS_ENTEROS = 'integer numbers';
Blockly.Msg.TIPOS_FRACCION = 'float';
Blockly.Msg.TIPOS_FRACCION1 = 'a float';
Blockly.Msg.TIPOS_FRACCIONS = 'floats';
Blockly.Msg.TIPOS_BINARIO = 'boolean';
Blockly.Msg.TIPOS_BINARIO1 = 'a boolean';
Blockly.Msg.TIPOS_BINARIOS = 'booleans';
Blockly.Msg.TIPOS_TEXTO = 'text';
Blockly.Msg.TIPOS_TEXTO1 = 'a text';
Blockly.Msg.TIPOS_TEXTOS = 'texts';
Blockly.Msg.TIPOS_CARACTER = 'letter';
Blockly.Msg.TIPOS_CARACTER1 = 'a letter';
Blockly.Msg.TIPOS_CARACTERS = 'letters';
Blockly.Msg.TIPOS_LISTA = 'list';
Blockly.Msg.TIPOS_LISTA1 = 'a list';
Blockly.Msg.TIPOS_LISTAS = 'lists';
Blockly.Msg.TIPOS_LISTA_DE = 'list of %1';
Blockly.Msg.TIPOS_LISTA_DE1 = 'a list of %1';
Blockly.Msg.TIPOS_LISTA_DES = 'lists of %1';
Blockly.Msg.TIPOS_ERROR_DIFERIDO = 'diferred error';
Blockly.Msg.TIPOS_ERROR_COLISION = 'colision between %1 and %2';
Blockly.Msg.TIPOS_ERROR_INCOMPATIBLES = 'incompatible types %1 and %2';
Blockly.Msg.TIPOS_ARGUMENTO1 = 'Argument';
Blockly.Msg.TIPOS_VARIABLE1 = 'Variable';
Blockly.Msg.TIPOS_FUNCION1 = 'Function';

Blockly.Msg.TIPOS_ERROR = 'Error';
Blockly.Msg.TIPOS_WARNING = 'Warning';
Blockly.Msg.TIPOS_ERROR_PARENT = 'This block has to be inside another block';
Blockly.Msg.TIPOS_ERROR_PARENT_FUN = 'This block can only be used inside a function definition';
Blockly.Msg.TIPOS_ERROR_PARENT_LOOP = 'This block can only be used inside a loop block';
Blockly.Msg.TIPOS_ERROR_VARIABLE_1 = '%1 %2 has already been used as %3';
Blockly.Msg.TIPOS_ERROR_VARIABLE_2 = ' but here it is used as %1';
Blockly.Msg.TIPOS_ERROR_ARGUMENTO = 'Argument %1 has to be %2';
Blockly.Msg.TIPOS_ERROR_CONDICION = 'This block\'s condition has to be %1';
Blockly.Msg.TIPOS_ERROR_OPERANDO = 'This block\'s operand has to be %1';
Blockly.Msg.TIPOS_ERROR_OPERANDO_N = 'The %1 operand has to be %2';
Blockly.Msg.TIPOS_ERROR_PERO = ' but it is %1';
Blockly.Msg.TIPOS_ERROR_PERO_ORDEN = ' but the %1 is %2 and the %3 is %4';
Blockly.Msg.TIPOS_ERROR_PERO_SINORDEN = ' but one is %1 and another is %2';
Blockly.Msg.TIPOS_ERROR_2OPS = 'Both operands has to be of the same type';
Blockly.Msg.TIPOS_ERROR_2OPS_N = 'The %1 operand has to be of the same type that the %2';
Blockly.Msg.TIPOS_ERROR_LISTOPS = 'All elements in the list have to be of the same type';
Blockly.Msg.TIPOS_ERROR_ITERADOR = 'The iterator has to be %1';
Blockly.Msg.TIPOS_ERROR_DIVIDENDO = 'The dividend has to be %1';
Blockly.Msg.TIPOS_ERROR_DIVISOR = 'The divisor has to be %1';
Blockly.Msg.TIPOS_ERROR_SET = 'The element to set has to be %1';
Blockly.Msg.TIPOS_ERROR_INSERT = 'The element to insert has to be %1';
Blockly.Msg.TIPOS_ERROR_FLOAT_EQ = 'It is not safe to compare float numbers by equality';
Blockly.Msg.TIPOS_ERROR_ZERO_DIV = 'It is not safe to divide by zero';
Blockly.Msg.TIPOS_ERROR_ZERO_LOG = 'It is not safe to get the logarith of zero';
Blockly.Msg.TIPOS_ERROR_NEG_LOG = 'It is not safe to get the logarith of a negative number';
Blockly.Msg.TIPOS_ORDEN_1 = 'first';
Blockly.Msg.TIPOS_ORDEN_2 = 'second';
Blockly.Msg.TIPOS_ORDEN_3 = 'third';
Blockly.Msg.TIPOS_ORDEN_4 = 'fourth';
Blockly.Msg.TIPOS_ORDEN_5 = 'fifth';
Blockly.Msg.TIPOS_ORDEN_6 = 'sixth';
Blockly.Msg.TIPOS_ORDEN_7 = 'seventh';
Blockly.Msg.TIPOS_ORDEN_8 = 'eight';
Blockly.Msg.TIPOS_ORDEN_9 = 'nineth';
Blockly.Msg.TIPOS_ORDEN_10 = 'tenth';
Blockly.Msg.TIPOS_ORDEN_1O = 'first one';
Blockly.Msg.TIPOS_ORDEN_2O = 'second one';
Blockly.Msg.TIPOS_ORDEN_3O = 'third one';
Blockly.Msg.TIPOS_ORDEN_4O = 'fourth one';
Blockly.Msg.TIPOS_ORDEN_5O = 'fifth one';
Blockly.Msg.TIPOS_ORDEN_6O = 'sixth one';
Blockly.Msg.TIPOS_ORDEN_7O = 'seventh one';
Blockly.Msg.TIPOS_ORDEN_8O = 'eight one';
Blockly.Msg.TIPOS_ORDEN_9O = 'nineth one';
Blockly.Msg.TIPOS_ORDEN_10O = 'tenth one';
